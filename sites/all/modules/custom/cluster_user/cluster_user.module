<?php
/**
 * @file
 * Code for the cluster_user feature.
 */

include_once 'cluster_user.features.inc';
/**
 * @file
 * Feature module which hanldes user parameters.
 */

/**
* Implements hook_entity_info_alter().
*/
function cluster_user_entity_info_alter(&$entity_info) {
  // Add a contact member view mode to users.
  $entity_info['user']['view modes']['contact_member'] = array(
    'label' => t('Contact member'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_user_view().
 */
function cluster_user_user_view($account, $view_mode, $langcod) {
  // Prepare the contact_member view mode.

/*
  switch ($view_mode){
    case 'contact_member':
      dpm(func_get_args());
      break;
  }
*/

}

/**
 * Implements hook_preprocess_user_profile().
 */
function cluster_user_preprocess_user_profile($vars) {

/*
  if ($vars['elements']['#view_mode'] == 'contact_member') {
    $vars['theme_hook_suggestions'][] = 'user_profile__contact_member';
  }
*/

}

/**
 *  Implements hook_preprocess_page().
 */
function cluster_user_preprocess_page(&$variables) {
  // User login block (form, register, forgot pwd)
  $user_login = module_invoke('user', 'block_view', 'login');
  if ($user_login) {
    $variables['user_login'] = $user_login['content'];
  }

  // User menu (my account, logout)
  $user_menu = menu_tree('user-menu');
  if ($user_menu) {
    $user_menu['#theme_wrappers'] = array('cluster_user_menu');
    foreach (element_children($user_menu) as $key) {
      $user_menu[$key]['#attributes']['class'] = array('profile-item');
    }
  }
  $variables['user_menu'] = $user_menu;
}

/**
 *  Implements hook_theme().
 */
function cluster_user_theme($existing, $type, $theme, $path) {
  return array(
    'cluster_user_menu' => array(
      'file' => 'theme/cluster_user.theme.inc',
      'render element' => 'element',
    ),
  );
}